{"name":"Tessel Key","tagline":"Tessel Key aims to be fully configurable NKRO keyboard software for the Tessel microcontroller.","body":"# Goals of this project\r\n- Present Tessel as a keyboard to a USB host\r\n    - Ideally, (optionally) present itself as multiple keyboards to bypass USB 6-key limit\r\n- Present Tessel as a keyboard via Bluetooth module (lower priority)\r\n- Run [express][express] + [socket.io][socket.io] on Tessel, provide Web UI to:\r\n    - Map GPIO pin to specific NKRO row or column (hopefully 1 time configuration)\r\n    - Map row + column combination to specific key\r\n        - Ability to edit/save/load profiles\r\n    - Set up macros (lower priority)\r\n    - Layout keys physically (drag-n-drop) for visualization purposes\r\n        - Ability to edit/save/load layouts\r\n    - Toggle actually sending keys to host (for debugging purposes)\r\n    - Force pin/row/column state\r\n    - Display real-time status information:\r\n        - Pin/row/column/key state (on, off, mode, etc.). 3 views:\r\n            - Tessel view (shows pin state)\r\n            - Grid view (shows row state and column state)\r\n            - Custom layout view (shows key state (mapped row + column combination)\r\n        - Each view is actually 2 views: graphical and textual\r\n            - This means the custom layout view will essentially be a keylogger\r\n\r\n[tesselkey]: http://tesselkey.com\r\n[nkro]: http://en.wikipedia.org/wiki/Rollover_(key)#n-key_rollover\r\n[tessel]: http://technical.io\r\n[express]: http://expressjs.com\r\n[socket.io]: http://socket.io\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}